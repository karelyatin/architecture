apiVersion: v1
data:
  25-nova-extra.conf: ""
kind: ConfigMap
metadata:
  name: nova-extra-config
  namespace: openstack
---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneDeployment
metadata:
  name: openstack-edpm
  namespace: openstack
spec:
  deploymentRequeueTime: 5
  nodeSets:
  - openstack-edpm
---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneNodeSet
metadata:
  name: openstack-edpm
  namespace: openstack
spec:
  networkAttachments:
  - ctlplane
  nodeTemplate:
    ansible:
      ansibleUser: root
      ansibleVars:
        ctlplane_dns_nameservers:
        - 192.168.122.1
        dns_search_domains: []
        edpm_network_config_template: |
          ---
          {% set mtu_list = [ctlplane_mtu] %}
          {% for network in role_networks %}
          {{ mtu_list.append(lookup('vars', networks_lower[network] ~ '_mtu')) }}
          {%- endfor %}
          {% set min_viable_mtu = mtu_list | max %}
          network_config:
          - type: ovs_bridge
            name: {{ neutron_physical_bridge_name }}
            mtu: {{ min_viable_mtu }}
            use_dhcp: false
            dns_servers: {{ ctlplane_dns_nameservers }}
            domain: {{ dns_search_domains }}
            addresses:
            - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_cidr }}
            routes: {{ ctlplane_host_routes }}
            members:
            - type: interface
              name: nic1
              mtu: {{ min_viable_mtu }}
              # force the MAC address of the bridge to this interface
              primary: true
          {% for network in role_networks %}
            - type: vlan
              mtu: {{ lookup('vars', networks_lower[network] ~ '_mtu') }}
              vlan_id: {{ lookup('vars', networks_lower[network] ~ '_vlan_id') }}
              addresses:
              - ip_netmask:
                  {{ lookup('vars', networks_lower[network] ~ '_ip') }}/{{ lookup('vars', networks_lower[network] ~ '_cidr') }}
              routes: {{ lookup('vars', networks_lower[network] ~ '_host_routes') }}
          {% endfor %}
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_nodes_validation_validate_gateway_icmp: false
        edpm_sshd_allowed_ranges:
        - 192.168.122.0/24
        enable_debug: false
        gather_facts: false
        image_prefix: openstack
        image_tag: current-podified
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: eth0
        registry_url: quay.io/podified-antelope-centos9
        timesync_ntp_servers:
        - hostname: clock.redhat.com
    ansibleSSHPrivateKeySecret: dataplane-ansible-ssh-private-key-secret
    extraMounts:
    - extraVolType: Logs
      mounts:
      - mountPath: /runner/artifacts
        name: ansible-logs
      volumes:
      - name: ansible-logs
        persistentVolumeClaim:
          claimName: ansible-ee-logs
  nodes:
    edpm-compute-0:
      ansible:
        ansibleHost: 192.168.122.100
      hostName: edpm-compute-0
      networks:
      - defaultRoute: true
        fixedIP: 192.168.122.100
        name: CtlPlane
        subnetName: subnet1
      - name: InternalApi
        subnetName: subnet1
      - name: Storage
        subnetName: subnet1
      - name: Tenant
        subnetName: subnet1
    edpm-compute-1:
      ansible:
        ansibleHost: 192.168.122.101
      hostName: edpm-compute-1
      networks:
      - defaultRoute: true
        fixedIP: 192.168.122.101
        name: CtlPlane
        subnetName: subnet1
      - name: InternalApi
        subnetName: subnet1
      - name: Storage
        subnetName: subnet1
      - name: Tenant
        subnetName: subnet1
  preProvisioned: true
  services:
  - custom-repo-setup
---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneService
metadata:
  name: nova-custom
  namespace: openstack
spec:
  caCerts: combined-ca-bundle
  configMaps:
  - nova-extra-config
  label: nova
  playbook: osp.edpm.nova
  secrets:
  - nova-cell1-compute-config
  - nova-migration-ssh-key
  tlsCert:
    contents:
    - dnsnames
    - ips
    issuer: rootca-internal
    networks:
    - ctlplane
---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneService
metadata:
  labels:
    app.kubernetes.io/name: openstackdataplaneservice
    app.kubernetes.io/instance: openstackdataplaneservice-repo-setup
    app.kubernetes.io/part-of: dataplane-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: install_yamls
  name: repo-setup
spec:
  play: |
    - hosts: all
      strategy: linear
      tasks:
        - name: Enable podified-repos
          become: true
          ansible.builtin.shell: |
            set -euxo pipefail
            pushd /var/tmp
            curl -sL https://github.com/openstack-k8s-operators/repo-setup/archive/refs/heads/main.tar.gz | tar -xz
            pushd repo-setup-main
            python3 -m venv ./venv
            PBR_VERSION=0.0.0 ./venv/bin/pip install ./
            ./venv/bin/repo-setup current-podified -b antelope
            popd
            rm -rf repo-setup-main
